# continues; this type of action will sift through a range of numbers and print all number once a certain
# number is reached the function will skip over the number and continue printing the next available numbers

numbersTaken = [2, 5, 12, 13, 17]
print('Here are the numbers that are still available')

for n in range(1,21):
    if n in numbersTaken:
        continue
    print(n)



#Functions

def beef():
    print("Goodness, Functions are Cool!!!")

def bitcoin_to_usd(btc):  #btc is the variable for bitcoin
    amount = btc * 527
    print(amount)

beef()
bitcoin_to_usd(3.85)
bitcoin_to_usd(1)


#Return Statement

def allowed_drinking_age(drinking_age):
    patron_age = drinking_age/2 + 7
    return patron_age

Noahs_limit = allowed_drinking_age(27)
print('Noah can drink', Noahs_limit, 'or older')


#Default Values for Arguments

def get_gender(sex = 'Unknown'):
    if sex == 'm':
        sex = 'Male'
    elif sex == 'f':
        sex = 'Female'
    print(sex)

get_gender('m')
get_gender('f')
get_gender()


# Variable Scope: if the variable is created outside and above the function, your function can access the variable
# If the variable is created inside a function, only the function that the variable is created under has access
# to that variable.

a = 7823

def corn():
    print(a)

def fudge():
    print(a)

corn()
fudge()



# Keyword Arguments; variables can be changed and passed in any order but will retain the initial order of wording

def dumb_sentence(name = 'Bucky', action = 'ate', item = 'tuna'):
    print(name, action, item)

dumb_sentence()
dumb_sentence('Sally', 'ate', 'ice cream')
dumb_sentence(item = 'awesome')
dumb_sentence(item = 'awesome', action = 'is')

